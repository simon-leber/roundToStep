{"mappings":"AAAA;IACI,SAAS,CAAC,EAAE,IAAI,GAAG,MAAM,GAAG,YAAY,CAAC;IACzC,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,MAAM,CAAC,EAAE,MAAM,CAAC;CACnB;AAED;;;;;GAKG;AACF,4BAAqB,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,eAAe,GAAG,MAAM,CAqBrE","sources":["src/src/index.ts","src/index.ts"],"sourcesContent":[null,"interface RoundingOptions {\n    direction?: 'up' | 'down' | 'commercial',\n    interval?: number,\n    offset?: number,\n}\n\n/**\n * Round numbers to a step. Accepts an interval and optional offset.\n * @param value Value to round\n * @param options Rounding options\n * @returns Rounded value\n */\n function roundToStep(value: number, options: RoundingOptions): number {\n    const defaults: Required<RoundingOptions> = { direction: 'up', interval: 1, offset: 0 }\n    const { direction, interval, offset } = { ...defaults, ...options }\n\n    const deltaToPrevious = (value - offset) % interval\n\n    const directionUpOrDown = (() => {\n        if (direction !== 'commercial') {\n            return direction\n        }\n        return deltaToPrevious < interval\n            ? 'down'\n            : 'up'\n    })()\n\n    if (directionUpOrDown === 'down') {\n        return value - deltaToPrevious\n    }\n\n    const deltaToNext = (interval - deltaToPrevious) % interval\n    return value + deltaToNext\n}\n\nexport { roundToStep }"],"names":[],"version":3,"file":"index.d.ts.map"}